{"ast":null,"code":"export function getFriends(userId) {\n  return function (dispatch) {\n    console.log('inside getFunction', userId);\n    const loginRequest = \"http://localhost:8002/friends/display/\".concat(userId);\n    fetch(loginRequest).then(response => response.json()).then(user => {\n      console.log('inside fetch', user);\n      dispatch({\n        type: 'friendRequest',\n        payload: user\n      });\n    });\n  };\n}\nexport function pendingRequest(ReceiverId) {\n  return function (dispatch) {\n    console.log('inside getFunction', ReceiverId);\n    const loginRequest = \"http://localhost:8003/request/display/\".concat(ReceiverId);\n    fetch(loginRequest).then(response => response.json()).then(user => {\n      console.log('inside fetch', user);\n      dispatch({\n        type: 'pendingRequest',\n        payload: user\n      });\n    });\n  };\n}\nexport function sendRequest(friendId, sender) {\n  return function (dispatch) {\n    console.log('inside getFunction', friendId, sender);\n    const loginRequest = \"http://localhost:8002/friends/update/\".concat(friendId);\n    fetch(loginRequest, {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      method: 'put',\n      body: JSON.stringify(sender)\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'sendRequest',\n        payload: user\n      });\n    });\n  };\n}\nexport function confirmRequest(friendId, sender) {\n  return function (dispatch) {\n    console.log('inside getFunction', friendId, sender);\n    const loginRequest = \"http://localhost:8003/request/update/\".concat(friendId);\n    fetch(loginRequest, {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      method: 'put',\n      body: JSON.stringify(sender)\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'confirmRequest',\n        payload: user\n      });\n    });\n  };\n}\nexport function deleteRequest(friendId, userId) {\n  return function (dispatch) {\n    console.log('inside getFunction', friendId, userId);\n    const user = {\n      userId: userId\n    };\n    const loginRequest = \"http://localhost:8002/friends/delete/\".concat(friendId);\n    fetch(loginRequest, {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      method: 'delete',\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'deleteRequest',\n        payload: user\n      });\n    });\n  };\n}\nexport function deletePendingRequest(friendId, sender) {\n  return function (dispatch) {\n    console.log('inside getFunction', friendId, sender);\n    const loginRequest = \"http://localhost:8003/request/delete/\".concat(friendId);\n    fetch(loginRequest, {\n      headers: {\n        Accept: 'application/json',\n        'Content-type': 'application/json'\n      },\n      method: 'put',\n      body: JSON.stringify(sender)\n    }).then(response => response.json()).then(user => {\n      dispatch({\n        type: 'deletePendingRequest',\n        payload: user\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/ethen/aakarshit/Facebook-clone/src/actions/friends.js"],"names":["getFriends","userId","dispatch","console","log","loginRequest","fetch","then","response","json","user","type","payload","pendingRequest","ReceiverId","sendRequest","friendId","sender","headers","Accept","method","body","JSON","stringify","confirmRequest","deleteRequest","deletePendingRequest"],"mappings":"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","sourcesContent":["export  function getFriends(userId) {\n    return function(dispatch) {\n        console.log('inside getFunction', userId);\n        const loginRequest = `http://localhost:8002/friends/display/${userId}`;\n        fetch(loginRequest)\n        .then(response => response.json())\n            .then((user) => {\n                console.log('inside fetch', user);\n                dispatch({type:'friendRequest', payload:user})\n            })\n }\n}\n\nexport  function pendingRequest(ReceiverId) {\n    return function(dispatch) {\n        console.log('inside getFunction', ReceiverId);\n        const loginRequest = `http://localhost:8003/request/display/${ReceiverId}`;\n        fetch(loginRequest)\n        .then(response => response.json())\n            .then((user) => {\n                console.log('inside fetch', user);\n                dispatch({type:'pendingRequest', payload:user})\n            })\n }\n}\n\n\nexport  function sendRequest(friendId, sender) {\n    return function(dispatch) {\n        console.log('inside getFunction', friendId, sender);\n            const loginRequest = `http://localhost:8002/friends/update/${friendId}`;\n            fetch(loginRequest, {\n                headers: {\n                    Accept:'application/json',\n                    'Content-type': 'application/json',\n                },\n                method:'put',\n                body: JSON.stringify(sender),\n            })\n            .then(response => response.json())\n                .then((user) => {\n                    dispatch({type:'sendRequest', payload:user})\n                })\n }\n}\n\nexport  function confirmRequest(friendId, sender) {\n    return function(dispatch) {\n        console.log('inside getFunction', friendId, sender);\n            const loginRequest = `http://localhost:8003/request/update/${friendId}`;\n            fetch(loginRequest, {\n                headers: {\n                    Accept:'application/json',\n                    'Content-type': 'application/json',\n                },\n                method:'put',\n                body: JSON.stringify(sender),\n            })\n            .then(response => response.json())\n                .then((user) => {\n                    dispatch({type:'confirmRequest', payload:user})\n                })\n\n }\n}\n\n\n\n\nexport  function deleteRequest(friendId, userId) {\n    return function(dispatch) {\n        console.log('inside getFunction', friendId, userId);\n            const user = {\n                userId: userId\n            }\n            const loginRequest = `http://localhost:8002/friends/delete/${friendId}`;\n            fetch(loginRequest, {\n                headers: {\n                    Accept:'application/json',\n                    'Content-type': 'application/json',\n                },\n                method:'delete',\n                body: JSON.stringify(user),\n            })\n            .then(response => response.json())\n                .then((user) => {\n                    dispatch({type:'deleteRequest', payload:user})\n                })\n\n }\n}\n\n\nexport  function deletePendingRequest(friendId, sender) {\n    return function(dispatch) {\n        console.log('inside getFunction', friendId, sender);\n            const loginRequest = `http://localhost:8003/request/delete/${friendId}`;\n            fetch(loginRequest, {\n                headers: {\n                    Accept:'application/json',\n                    'Content-type': 'application/json',\n                },\n                method:'put',\n                body: JSON.stringify(sender),\n            })\n            .then(response => response.json())\n                .then((user) => {\n                    dispatch({type:'deletePendingRequest', payload:user})\n                })\n\n }\n}"]},"metadata":{},"sourceType":"module"}